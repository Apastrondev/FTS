
using DataLayer.AutoGeneratedCode;
using DataLayer.DataBaseManager;
using FileTrackingSystem.Repository.WebAdmin;
using FileTrackingSystem.ViewModel.WebAdmin;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;

namespace FileTrackingSystem.Controllers
{
    public partial class WebAdminController : Controller
    {

        #region DepartmentMaster
        [HttpGet]
        public IActionResult DepartmentMaster()
        {
            WebAdminDepartmentMasterViewModel model = new WebAdminDepartmentMasterViewModel();
            try
            {

                using (FTSContext db = new FTSContext())
                {
                    model.Departments = db.DepartmentMasters.Where(dept => dept.IsDeleted != true).ToList();
                }


            }
            catch (Exception ex)
            {
               
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }

            return View(model);
        }

  
    #endregion DepartmentMaster

    #region departmentmasteradd
    public IActionResult DepartmentMasterAdd(WebAdminDepartmentMasterViewModel model)
    {
        try
        {

            using (FTSContext db = new FTSContext())
            {


                DepartmentMaster department = new DepartmentMaster();
                department.Name = model.Department.Name;
                //department.Id = model.DepartmentMaster.Id;

                department.IsDeleted = false;

                db.DepartmentMasters.Add(department);
                db.SaveChanges();

            }
        }
        catch (Exception ex)
        {
            ExceptionLog.LogDBException(new ExceptionModel(ex));
        }
        return RedirectToAction("DepartmentMaster");
    }



        #endregion DepartmentMasterAdd



        #region DepartmentMasterDelete
        [HttpGet]
        public IActionResult DepartmentMasterDelete(int id)
        {
            try
            {
                using (FTSContext db = new FTSContext())
                {
                    var deleteRecord = db.DepartmentMasters.FirstOrDefault(x => x.Id == id);
                    if (deleteRecord != null)
                    {
                        deleteRecord.IsDeleted = true;
                        db.SaveChanges();
                    }
                }
            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }

             return RedirectToAction("DepartmentMaster");
        }
        #endregion



        #region Designation
        [HttpGet]
       
        public IActionResult DesignationMaster()
        {
            WebAdminDesignationMasterViewModel model = new WebAdminDesignationMasterViewModel();
            try
            {

               
                using (FTSContext db = new FTSContext())
                {
                    model.DesignationtMasters = db.Designations.Where(dept => dept.IsDeleted != true).ToList();
                }


            }
            catch (Exception ex)
            {
               
                    ExceptionLog.LogDBException(new ExceptionModel(ex));
            }

            return View(model);
        }
        #endregion Designation

        #region designationmasterdelete
        [HttpGet]
        public IActionResult DesignationMasterDelete(int id)
        {
            try
            {
                using (FTSContext db = new FTSContext())
                {
                    var deleteRecord = db.Designations.FirstOrDefault(x => x.Id == id);
                    if (deleteRecord != null)
                    {
                        deleteRecord.IsDeleted = true;
                        db.SaveChanges();
                    }
                }
            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }

            return RedirectToAction("DepartmentMaster");

          
        }
        #endregion

        #region DesignationMasterAdd
        [HttpPost]
        public IActionResult DesignationMasterAdd(WebAdminDesignationMasterViewModel model)
        {
            
            try
            {
                using (FTSContext db = new FTSContext())
                {
                    Designation designation = new Designation();
                    designation.Type = model.DesignationMaster.Type;
                    //designation.Id = model.DesignationMaster.Id;

                    designation.IsDeleted = false;

                    db.Designations.Add(designation);
                    db.SaveChanges();

                }
            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }

            return RedirectToAction("DesignationMaster");
        }
#endregion DesignationMasterAdd



        public IActionResult Index()
        {

            return View();
        }



        #region LetterMaster
        [HttpGet]
        public IActionResult LetterMaster()
        {

            WebAdminLetterMasterViewModel model = new WebAdminLetterMasterViewModel();
            try
            {

                using (FTSContext db = new FTSContext())
                {
                    model.Letters = db.Letters.Where(l => l.IsDeleted != true).ToList();
                }


            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }
            return View(model);

        }


        #endregion Letter Master


        #region letterMasterAdd
        [HttpPost]
        public IActionResult LetterMasterAdd(WebAdminLetterMasterViewModel model)
        {
          
            try
            {
                using (FTSContext db = new FTSContext())
                {
                    Letter letter = new Letter();
                    letter.Type = model.letter.Type;
                    //letter.Id = model.letter.Id;

                    letter.IsDeleted = false;

                    db.Letters.Add(letter);
                    db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }


            return RedirectToAction("LetterMaster");
        }
        #endregion letterMasterAdd

        #region letterMasterDelete
        [HttpGet]
        public IActionResult LetterMasterDelete(int id)
        {
            try
            {
                using (FTSContext db = new FTSContext())
                {
                    var deleteRecord = db.Letters.FirstOrDefault(x => x.Id == id);
                    if (deleteRecord != null)
                    {
                        deleteRecord.IsDeleted = true;
                        db.SaveChanges();
                    }
                }
            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }



            return RedirectToAction("LetterMaster");
        }

        #endregion letterMasterDelete

        public IActionResult OfficeMaster()
        {
            return View();
        }

       
        public IActionResult Setting()
        {
            return View();
        }

        #region office type
        [HttpGet]
        public IActionResult OfficeType()
        {
           
            WebAdminOfficeTypeViewModel model = new WebAdminOfficeTypeViewModel();
            try
            {


                using (FTSContext db = new FTSContext())
                {
                    model.offices = db.OfficeTypes.Where(o => o.IsDeleted != true).ToList();
                }


            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }
            return View(model);
        }
        #endregion office type

        #region officetypeadd
        [HttpPost]
        public IActionResult OfficeTypeAdd(WebAdminOfficeTypeViewModel model)
        {
            try
            {
                using (FTSContext db = new FTSContext())
                {
                    OfficeType officeType = new OfficeType();
                    officeType.Type = model.officers.Type;
                    officeType.IsDeleted = false;

                    db.OfficeTypes.Add(officeType);
                    db.SaveChanges();
                }


            }

            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }
            return View("OfficeType");

        }
        #endregion officetypeadd

        #region officetypedelete

        [HttpGet]
        public IActionResult OfficeTypeDelete(int id)
        {
            try
            {
                using (FTSContext db = new FTSContext())
                {
                    var deleteRecord = db.Letters.FirstOrDefault(x => x.Id == id);
                    if (deleteRecord != null)
                    {
                        deleteRecord.IsDeleted = true;
                        db.SaveChanges();
                    }
                }
            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }


            return RedirectToAction("OfficeType");
        }
#endregion officetypedelete

        #region status
        [HttpGet]
        public IActionResult StatusMaster()
        {
            WebAdminStatusMasterViewModel model = new WebAdminStatusMasterViewModel();
            try
            {

                using (FTSContext db = new FTSContext())
                {
                    model.statuses = db.Statuses.Where(st => st.IsDeleted != true).ToList();
                }


            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }
            return View(model);
        }
        #endregion status

        #region statusadd
        [HttpPost]
        public IActionResult StatusMasterAdd(WebAdminStatusMasterViewModel model)

        {
            try
            {
                using (FTSContext db = new FTSContext())
                {
                    Status status = new Status();
                    status.Description = model.status.Description;
                    //status.Id = model.status.Id;

                    status.IsDeleted = false;

                    db.Statuses.Add(status);
                    db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }

            return RedirectToAction("StatusMaster");
        }


        #endregion statusAdd 

        #region statusdelete

        [HttpGet]
        public IActionResult StatusDelete(int id)
        {
            try
            {
                using (FTSContext db = new FTSContext())
                {
                    var deleteRecord = db.Statuses.FirstOrDefault(x => x.Id == id);
                    if (deleteRecord != null)
                    {
                        deleteRecord.IsDeleted = true;
                        db.SaveChanges();
                    }
                }
            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }


            return RedirectToAction("StatusMaster");
        }

        #endregion statusdelete

        #region subjectmaster
        public IActionResult SubjectMaster()
        {
           
            WebAdminSubjectMasterViewModel model = new WebAdminSubjectMasterViewModel();
            try
            {


                using (FTSContext db = new FTSContext())
                {
                    model.subjects = db.Subjects.Where(sub => sub.IsDeleted != true).ToList();
                }


            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }
            return View(model);
        }
        #endregion subjectmaster


        #region subjectmasterAdd

        public IActionResult SubjectMasterAdd(WebAdminSubjectMasterViewModel model)

        {
            try
            {
                using (FTSContext db = new FTSContext())
                {
                    Subject subject = new Subject();
                    subject.Name = model.subjectes.Name;
                    subject.SubName = model.subjectes.SubName;
                    //subject.Id = model.subjectes.Id;
                    subject.IsDeleted = false;

                    db.Subjects.Add(subject);
                    db.SaveChanges();



                }
            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }

            return RedirectToAction("SubjectMaster");
        }

        #endregion subjectmasterAdd

        #region subjectmasterdelete

        [HttpGet]
        public IActionResult SubjectMasterDelete(int id)
        {
            try
            {
                using (FTSContext db = new FTSContext())
                {
                    var deleteRecord = db.Subjects.FirstOrDefault(x => x.Id == id);
                    if (deleteRecord != null)
                    {
                        deleteRecord.IsDeleted = true;
                        db.SaveChanges();
                    }
                }
            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }


            return RedirectToAction("SubjectMaster");
        }

        #endregion subjectmasterdelete



        #region YearMaster
        public IActionResult YearMaster()
        {

            WebAdminYearMasterViewModel model = new WebAdminYearMasterViewModel();
            try
            {


                using (FTSContext db = new FTSContext())
                {
                    model.Years = db.Years.Where(sub => sub.IsDeleted != true).ToList();
                }


            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }
            return View(model);
        }
        #endregion YearMaster

        #region YearmasterAdd

        public IActionResult YearMasterAdd(WebAdminYearMasterViewModel model)

        {
            try
            {
                using (FTSContext db = new FTSContext())
                {
                    Year year = new Year();
                    year.Year1 = model.Year.Year1;
                    year.IsDeleted = false;

                    db.Years.Add(year);
                    db.SaveChanges();



                }
            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }

            return RedirectToAction("YearMaster");
        }

        #endregion YearmasterAdd

        #region yeartmasterdelete

        [HttpGet]
        public IActionResult YearMasterDelete(int id)
        {
            try
            {
                using (FTSContext db = new FTSContext())
                {
                    var deleteRecord = db.Subjects.FirstOrDefault(x => x.Id == id);
                    if (deleteRecord != null)
                    {
                        deleteRecord.IsDeleted = true;
                        db.SaveChanges();
                    }
                }
            }
            catch (Exception ex)
            {
                ExceptionLog.LogDBException(new ExceptionModel(ex));
            }


            return RedirectToAction("YearMaster");
        }

        #endregion yeartmasterdelete



    }
}
