using DataLayer.AutoGeneratedCode;
using FileTrackingSystem.Extensions;
using FileTrackingSystem.ViewModel.OfficeAdmin;
using Microsoft.AspNetCore.Mvc;
using X.PagedList.Mvc.Core;
using X.PagedList;
using X.PagedList.Mvc;

namespace FileTrackingSystem.Controllers
{
    public class OfficeAdminController : Controller
    {
        public IActionResult Index()
        {
            return View();
        }

        public IActionResult TotalInwardForm()
        {
            using (var db = new FTSContext())
            {
                OfficeAdminInwardViewModel officeAdmin = new OfficeAdminInwardViewModel();
                var Inward = db.Inwards.ToList();
                officeAdmin.inwards = Inward;
                return View(officeAdmin);
            }
        }
        public IActionResult TotalOutwardForm()
        {
            using (var db = new FTSContext())
            {
                OfficeAdminOutwardViewModel officeAdmin = new OfficeAdminOutwardViewModel();
                var outward = db.Outwards.ToList();
                officeAdmin.outwards = outward;
                return View(officeAdmin);
            }
        }
        [HttpGet]
        public IActionResult OfficeMaster()
        {
            using (var db = new FTSContext())
            {
                OfficeAdminOfficeMasterViewModel officeAdmin = new OfficeAdminOfficeMasterViewModel();
                var officeData = db.OfficeMasters.Where(x => x.IsDeleted != true).ToList();
                var officeType = db.OfficeTypes.Where(x => x.IsDeleted != true).ToList();
                officeAdmin.officeMasters = officeData;
                officeAdmin.officeType = officeType;
                return View(officeAdmin);
            }
        }
        [HttpPost]
        public IActionResult AddOfficeMaster(OfficeAdminOfficeMasterViewModel Admin)
        {
            using (var db = new FTSContext())
            {
                OfficeMaster master = new OfficeMaster();
                master.CreateOfficeMasterObject(Admin);
                db.OfficeMasters.Add(master);
                db.SaveChanges();
                return RedirectToAction("OfficeMaster");
            }
        }

        public IActionResult DeleteOfficeMaster(int id)
        {
            using (var db = new FTSContext())
            {
                var office = db.OfficeMasters.FirstOrDefault(x => x.Id == id);
                office.IsDeleted = true;
                db.SaveChanges();
                return RedirectToAction("OfficeMaster");
            }
        }

        public IActionResult EditOfficeMaster(int id)
        {
            using (var db = new FTSContext())
            {
                var office = db.OfficeMasters.FirstOrDefault(x => x.Id == id);
                return View(office);
            }
        }

        [HttpPost]
        public IActionResult UpdateOfficeMaster(OfficeMaster Admin)
        {
            using (var db = new FTSContext())
            {
                var master = db.OfficeMasters.FirstOrDefault(x => x.Id == Admin.Id);
                master.OfficeTypeId = Admin.OfficeTypeId;
                master.OfficeName = Admin.OfficeName;
                master.Ddocode = Admin.Ddocode;
                master.ContactPersonName = Admin.ContactPersonName;
                master.Contact1 = Admin.Contact1;
                master.Contact2 = Admin.Contact2;
                master.District = Admin.District;
                master.Taluka = Admin.Taluka;
                master.PinCode = Admin.PinCode;
                master.Address = Admin.Address;
                master.Email = Admin.Email;
                master.WebSite=Admin.WebSite;
                master.Fax = Admin.Fax;
                db.SaveChanges();
                return RedirectToAction("OfficeMaster");
            }
        }
        [HttpGet]
        public IActionResult OfficeType(int? page)
        {
            using (var db = new FTSContext())
            {
                OfficeAdminOfficeTypeViewModel officeAdmin = new OfficeAdminOfficeTypeViewModel();
                //var officeType = db.OfficeTypes.Where(x => x.IsDeleted != true).ToList();

                var officeType = db.OfficeTypes.Where(x => x.IsDeleted != true).ToPagedList(page ?? 1, 1);
                officeAdmin.officeTypes = officeType;
                return View(officeAdmin);
            }
        }

        [HttpPost]
        public IActionResult AddOfficeType(OfficeAdminOfficeTypeViewModel officeType)
        {
            using (var db = new FTSContext())
            {
                //var type = new OfficeType(officeType.officeType);
                var type = new OfficeType();
                type.Type = officeType.Type;
                type.IsDeleted = officeType.IsDeleted;
                db.OfficeTypes.Add(type);
                db.SaveChanges();
                return RedirectToAction("OfficeType");
            }
        }
        public IActionResult DeleteOfficeType(int id)
        {
            using (var db = new FTSContext())
            {
                var office = db.OfficeTypes.FirstOrDefault(x => x.Id == id);
                office.IsDeleted = true;
                db.SaveChanges();
                return RedirectToAction("OfficeType");
            }
        }
        [HttpPost]
        public IActionResult UpdateOfficeType(OfficeType officeType)
        {
            using (var db = new FTSContext())
            {
                var type = db.OfficeTypes.FirstOrDefault(x => x.Id == officeType.Id);
                type.Type = officeType.Type;
                type.IsDeleted = officeType.IsDeleted;
                db.SaveChanges();
                return RedirectToAction("OfficeType");
            }
        }
        public IActionResult EditOfficeType(int id)
        {
            using (var db = new FTSContext())
            {
                var office = db.OfficeTypes.FirstOrDefault(x => x.Id == id);
                return View(office);
            }
        }
        public IActionResult EmployeeMaster()
        {
            using (var db = new FTSContext())
            {
                OfficeAdminEmployeeMasterViewModel officeAdmin = new OfficeAdminEmployeeMasterViewModel();
                var Employee = db.UserMasters.Where(x=>x.IsDeleted != false).ToList();
                var designation = db.Designations.ToList();
                var office = db.OfficeMasters.ToList();
                var dept = db.DepartmentMasters.ToList();
                officeAdmin.Employees = Employee;
                officeAdmin.officeMasters = office;
                officeAdmin.Designations= designation;
                officeAdmin.departmentMasters= dept;
                return View(officeAdmin);
            }
        }

        [HttpPost]
        public IActionResult AddEmployeeMaster(OfficeAdminEmployeeMasterViewModel model)
        {
            using (var db = new FTSContext())
            {
                //var employeeMaster = new UserMaster(employee.Employee);
                var employeeMaster = new UserMaster();
                employeeMaster.CreateEmployeeMasterForOfficeAdmin(model);
                db.UserMasters.Add(employeeMaster);
                db.SaveChanges();
                return RedirectToAction("EmployeeMaster");
            }
        }
        public IActionResult DeleteEmployeeMaster(int id)
        {
            using (var db = new FTSContext())
            {
                var emp = db.UserMasters.FirstOrDefault(x => x.Id == id);
                emp.IsDeleted = true;
                db.SaveChanges();
                return RedirectToAction("EmployeeMaster");
            }
        }
        public IActionResult DesignationMaster()
        {
            using (var db = new FTSContext())
            {
                OfficeAdminDesignationMasterViewModel officeAdmin = new OfficeAdminDesignationMasterViewModel();
                var Designation = db.Designations.Where(x => x.IsDeleted != true).ToList();
                officeAdmin.Designations = Designation;
                return View(officeAdmin);
            }
        }
        [HttpPost]
        public IActionResult AddDesignation(OfficeAdminDesignationMasterViewModel designation)
        {
            using (var db = new FTSContext())
            {
                var designationMaster = new Designation();
                designationMaster.Type = designation.Type;
                designationMaster.IsDeleted = designation.IsDeleted;
                db.Designations.Add(designationMaster);
                db.SaveChanges();
                return RedirectToAction("DesignationMaster");
            }
        }
        public IActionResult DeleteDesignation(int id)
        {
            using (var db = new FTSContext())
            {
                var designation = db.Designations.FirstOrDefault(x => x.Id == id);
                designation.IsDeleted = true;
                db.SaveChanges();
                return RedirectToAction("DesignationMaster");
            }
        }
        public IActionResult DepartmentMaster()
        {
            using (var db = new FTSContext())
            {
                OfficeAdminDepartmentViewModel officeAdmin = new OfficeAdminDepartmentViewModel();
                var Department = db.DepartmentMasters.Where(x => x.IsDeleted != true).ToList();
                officeAdmin.Departments = Department;
                return View(officeAdmin);
            }
        }
        [HttpPost]
        public IActionResult AddDepartment(OfficeAdminDepartmentViewModel department)
        {
            using (var db = new FTSContext())
            {
                var departmentMaster = new DepartmentMaster();
                departmentMaster.Name = department.Name;
                departmentMaster.IsDeleted = department.IsDeleted;
                db.DepartmentMasters.Add(departmentMaster);
                db.SaveChanges();
                return RedirectToAction("DepartmentMaster");
            }
        }
        public IActionResult DeleteDepartment(int id)
        {
            using (var db = new FTSContext())
            {
                var dept = db.DepartmentMasters.FirstOrDefault(x => x.Id == id);
                dept.IsDeleted = true;
                db.SaveChanges();
                return RedirectToAction("DepartmentMaster");
            }
        }
        public IActionResult SubjectMaster()
        {
            using (var db = new FTSContext())
            {
                OfficeAdminSubjectViewModel officeAdmin = new OfficeAdminSubjectViewModel();
                var Subject = db.Subjects.Where(x => x.IsDeleted != true).ToList();
                officeAdmin.Subjects = Subject;
                return View(officeAdmin);
            }
        }
        [HttpPost]
        public IActionResult AddSubject(OfficeAdminSubjectViewModel subject)
        {
            using (var db = new FTSContext())
            {
                var subjectMaster = new Subject();
                subjectMaster.Name = subject.Name;
                subjectMaster.IsDeleted = subject.IsDeleted;

                db.Subjects.Add(subjectMaster);
                db.SaveChanges();
                return RedirectToAction("SubjectMaster");
            }
        }
        public IActionResult DeleteSubject(int id)
        {
            using (var db = new FTSContext())
            {
                var subject = db.Subjects.FirstOrDefault(x => x.Id == id);
                subject.IsDeleted = true;
                db.SaveChanges();
                return RedirectToAction("SubjectMaster");
            }
        }
        public IActionResult LetterMaster()
        {
            using (var db = new FTSContext())
            {
                OfficeAdminLetterViewModel officeAdmin = new OfficeAdminLetterViewModel();
                var Letter = db.Letters.Where(x => x.IsDeleted != true).ToList();
                officeAdmin.Letters = Letter;
                return View(officeAdmin);
            }
        }
        [HttpPost]
        public IActionResult AddLetter(OfficeAdminLetterViewModel letter)
        {
            using (var db = new FTSContext())
            {
                //var letterMaster = new Letter(letter.Letter);
                var letterMaster = new Letter();
                letterMaster.IsDeleted = letter.IsDeleted;
                letterMaster.Type = letter.Type;
                db.Letters.Add(letterMaster);
                db.SaveChanges();
                return RedirectToAction("LetterMaster");
            }
        }
        public IActionResult DeleteLetter(int id)
        {
            using (var db = new FTSContext())
            {
                var letter = db.Letters.FirstOrDefault(x => x.Id == id);
                letter.IsDeleted = true;
                db.SaveChanges();
                return RedirectToAction("StatusMaster");
            }
        }
        public IActionResult StatusMaster()
        {
            using (var db = new FTSContext())
            {
                OfficeAdminStatusViewMaster officeAdmin = new OfficeAdminStatusViewMaster();
                var Status = db.Statuses.Where(x => x.IsDeleted != true).ToList();
                officeAdmin.Statuses = Status;
                return View(officeAdmin);
            }
        }
        [HttpPost]
        public IActionResult AddStatus(OfficeAdminStatusViewMaster status)
        {
            using (var db = new FTSContext())
            {
                //var statusMaster = new Status(status.Status);
                var statusMaster = new Status();
                statusMaster.Description = status.Description;
                statusMaster.IsDeleted = status.IsDeleted;
                db.Statuses.Add(statusMaster);
                db.SaveChanges();
                return RedirectToAction("StatusMaster");
            }
        }
        public IActionResult DeleteStatus(int id)
        {
            using (var db = new FTSContext())
            {
                var status = db.Statuses.FirstOrDefault(x => x.Id == id);
                status.IsDeleted = true;
                db.SaveChanges();
                return RedirectToAction("StatusMaster");
            }
        }
        public IActionResult YearMaster()
        {
            using (var db = new FTSContext())
            {
                OfficeAdminYearViewModel officeAdmin = new OfficeAdminYearViewModel();
                var Year = db.Years.Where(x => x.IsDeleted != true).ToList();
                officeAdmin.Years = Year;
                return View(officeAdmin);
            }
        }
        [HttpPost]
        public IActionResult AddYear(OfficeAdminYearViewModel year)
        {
            using (var db = new FTSContext())
            {
                //var yearMaster = new Year(year.Year);
                var yearMaster = new Year();
                yearMaster.Year1 = year.Year1;
                yearMaster.IsDeleted = year.IsDeleted;
                db.Years.Add(yearMaster);
                db.SaveChanges();
                return RedirectToAction("YearMaster");
            }
        }

        public IActionResult DeleteYear(int id)
        {
            using (var db = new FTSContext())
            {
                var year = db.Years.FirstOrDefault(x => x.Id == id);
                year.IsDeleted = true;
                db.SaveChanges();
                return RedirectToAction("YearMaster");
            }
        }
        public IActionResult Settings()
        {
            return View();
        }
    }
}
