using DataLayer.AutoGeneratedCode;
using FileTrackingSystem.Extensions;
using FileTrackingSystem.ViewModel.WebAdmin;
using Microsoft.EntityFrameworkCore;

namespace FileTrackingSystem.Repository.WebAdmin
{
    public class WebAdminRepository
    {
        public WebAdminEmployeeMasterViewModel GetEmployees()
        {
            WebAdminEmployeeMasterViewModel model = new WebAdminEmployeeMasterViewModel();
            using (FTSContext db = new FTSContext())
            {
                model.EmployeeMasters = db.EmployeeMasters.Include(y => y.Dept).Where(x => x.IsDeleted == false).ToList();
            }
            return model;
        }



        public WebAdminEmployeeMasterViewModel GetEmployee(int id)
        {
            WebAdminEmployeeMasterViewModel model = new WebAdminEmployeeMasterViewModel();
            using (FTSContext db = new FTSContext())
            {
                var employee = db.EmployeeMasters.FirstOrDefault(x => x.Id == id);
                if (employee != null)
                {
                    model = new WebAdminEmployeeMasterViewModel(employee);
                }
            }
            return model;
        }


        public WebAdminEmployeeMasterViewModel Save(WebAdminEmployeeMasterViewModel model)
        {
            using (FTSContext db = new FTSContext())
            {
                EmployeeMaster employeeMaster = new EmployeeMaster();
                employeeMaster.CreateEmployeeMasterObject(model);
                db.EmployeeMasters.Add(employeeMaster);
                db.SaveChanges();
            }
            return model;
        }

        public void Delete(int id)
        {
            using (FTSContext db = new FTSContext())
            {
                var emp = db.EmployeeMasters.FirstOrDefault(x => x.Id == id);
                if (emp != null)
                {
                    emp.IsDeleted = true;
                }
                db.SaveChanges();
            }
        }


        public void Update(WebAdminEmployeeMasterViewModel model)
        {
            using (FTSContext db = new FTSContext())
            {
                var employeeMaster = db.EmployeeMasters.FirstOrDefault(x => x.Id == model.Id);
                if (employeeMaster != null)
                {
                    employeeMaster.CreateEmployeeMasterObject(model);
                }
                db.SaveChanges();
            }

        }
    }
}
